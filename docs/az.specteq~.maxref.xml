<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--Data marked TEXT_HERE, INLET_TYPE, OUTLET_TYPE, ARG_NAME and ARG_TYPE need to be filled in-->
<c74object name="az.spectdeq~" module="msp" category="Filter">
	<digest>
		Spectral EQ processor
	</digest>
	<description>
		The <o>az.specteq~</o> object performs equalization on the incoming sound stream. It splits the audio into multiple frequency bands and gives each band its own volume control.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">John Gibson</metadata>
		<metadata name="tag">Audio</metadata>
		<metadata name="tag">Filter</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="signal/float">
			<digest>
				mono signal, messages
			</digest>
			<description>
				Mono signal to be processed and messages that determine how this works
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="signal">
			<digest>
				Mono signal output
			</digest>
			<description>
				Mono signal containing processed sound
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="fft-length" type="symbol" optional="1">
			<digest>
				FFT length
			</digest>
			<description>
				Sets the number of samples fed to the FFT algorithm. If missing, it is 1024 (and window-length is 2048 and overlap is 2).
			</description>
		</objarg>
		<objarg name="window-length" type="symbol" optional="1">
			<digest>
				Window length
			</digest>
			<description>
				Sets the number of samples in a window. This is normally two times the FFT length, but can be any power-of-two multiple of the FFT size from 1 to 8. If missing, it is 2048 (and overlap is 2). NOTE: It takes a certain, fixed amount of time for the sound to enter the object and emerge processed. If you want to delay your dry signal so that it synchronizes with the processed signal, delay it by the window length.
			</description>
		</objarg>
		<objarg name="fft-window-overlap" type="symbol" optional="1">
			<digest>
				FFT window overlap
			</digest>
			<description>
				Sets the degree of overlap between successive FFT frames. 1: no overlap, 2: FFTlen/2, 4: FFTlen/4, etc. 2 or 4 is usually fine; 1 is fluttery; 4 gives fewer artifacts; higher overlaps use more CPU. If missing, it is 2.
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="binmap">
			<arglist>
				<arg name="binmap" type="list" optional="1" />
			</arglist>
			<digest>
				Allocate FFT bands to EQ gain inputs
			</digest>
			<description>
				The word <m>binmap</m> followed by a list of ints determines the number of consecutive FFT frequency bands (or <m>bins</m>) to affect by each of the elements of a list of EQ gain values. The binmap list and the EQ gain list must be the same size. Giving the word "binmap" alone cancels the use of a binmap list. For example, the message "binmap 1 2 10 20 50" assumes a previous <m>eq</m> message of five floats and treats the first of those floats as the gain of the lowest FFT bin, the second as the gain of the next two FFT bins, the third as the gain of the next ten FFT bins, the fourth as the gain of the next 20 FFT bins, and the fifth as the gain of the next 50 FFT bins (and any leftover bins above these). The point of this scheme is to let you use a manageable number of sliders to control the large number of frequency bands typically produced by an FFT.
			</description>
		</method>
		<method name="eq">
			<arglist>
				<arg name="eq" type="list" optional="0" units="dB"/>
			</arglist>
			<digest>
				Set the list of EQ gains
			</digest>
			<description>
				The word <m>eq</m>, followed by a list of floats, which define the amplitude scaling for individual frequency bands, in decibels. (0 dB: no change, +dB: boost, -dB: cut.) The effect depends on the EQ frequency range (<m>range</m>) or <m>binmap</m> list. If the <m>eq</m> list contains just one number, then it is applied to all the frequency bands.
			</description>
		</method>
		<method name="ex">
			<arglist>
				<arg name="index" type="int" optional="0"/>
				<arg name="eq-gain" type="float" optional="0"/>
			</arglist>
			<digest>
				Assign one EQ gain
			</digest>
			<description>
				The word <m>ex</m>, followed by a zero-based index (int) and EQ amplitude scaling in dB (float) to replace the value at that index in the currently defined EQ gain list. This list must already have at least index + 1 values.
			</description>
		</method>
		<method name="fft">
			<arglist>
				<arg name="fft-length" type="int" optional="0" units="samples" />
				<arg name="window-length" type="int" optional="0" units="samples" />
				<arg name="overlap" type="int" optional="0" units="" />
			</arglist>
			<digest>
				Reconfigure FFT parameters
			</digest>
			<description>
				The word <m>fft</m>, followed by three ints, gives the FFT length, window length, and overlap (respectively). See explanation of these parameters in the Arguments section. Sending this message will halt processing while the object reconfigures itself; this will cause an audio glitch.
			</description>
		</method>
		<method name="range">
			<arglist>
				<arg name="min-freq" type="list" optional="0" units="hz" />
				<arg name="max-freq" type="list" optional="0" units="hz" />
			</arglist>
			<digest>
				Set the range of frequencies controlled by the EQ list 
			</digest>
			<description>
				The word <m>range</m>, followed by two floats (min and max), which define the frequency range within which the EQ gain (<m>eq</m>) list functions. Giving 0 for max sets the maximum frequency to the Nyquist frequency (half of the sampling rate). By default, the range is 0 Hz to Nyquist. When the frequency range is not the full range, the first value of the EQ gain list controls all the FFT bins from 0 Hz to approximately the lowest value of the frequency range. Similarly, the last value of one of these lists controls all the FFT bins from approimately the highest value of the frequency range to the Nyquist frequency. Note that <m>range</m> is ignored when using the <m>binmap</m> list.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<!--EXAMPLE-->
	<examplelist>
		<example caption="" img="" />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bogus">
			TEXT_HERE
		</seealso>
	</seealsolist>

	<misc name="Output">
		<entry name="signal">
			<description>
				Processed mono signal.
			</description>
		</entry>
	</misc>
</c74object>
